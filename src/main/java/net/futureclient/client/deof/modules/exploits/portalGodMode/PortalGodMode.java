package net.futureclient.client.deof.modules.exploits.portalGodMode;

public class PortalGodMode {
}
/*
package net.futureclient.client;

import net.futureclient.client.Ba;
import net.futureclient.client.Bh;
import net.futureclient.client.Gg;
import net.futureclient.client.ID;
import net.futureclient.client.JD;
import net.futureclient.client.z;
import net.minecraft.client.Minecraft;

public class Tf
extends Ba {
    private Bh f$d;
    private z<Boolean> f$b;
    private double f$i;
    private double f$j;
    private boolean f$g;
    private double f$M;

    public static boolean f$E(Tf tf, boolean bl) {
        tf.f$g = bl;
        return tf.f$g;
    }

    public static Minecraft f$B() {
        return f$d;
    }

    public static z f$E(Tf tf) {
        return tf.f$b;
    }

    public static boolean f$E(Tf tf) {
        return tf.f$g;
    }

    public static Minecraft f$e() {
        return f$d;
    }

    public static double f$E(Tf tf) {
        return tf.f$M;
    }

    public Tf() {
        Tf tf;
        String[] stringArray = new String[4];
        stringArray[0] = "PortalGodMode";
        stringArray[1] = "PortalGod";
        stringArray[2] = "GodMode";
        stringArray[3] = "God";
        super("PortalGodMode", stringArray, true, -12069189, JD.f$K);
        Tf tf2 = tf;
        String[] stringArray2 = new String[4];
        stringArray2[0] = "PositionAdjust";
        stringArray2[1] = "PosAdjust";
        stringArray2[2] = "PositionAdjustment";
        stringArray2[3] = "PosFix";
        tf2.f$b = new z<Boolean>(true, stringArray2);
        tf.f$g = false;
        tf.f$d = new Bh();
        tf.f$E(tf.f$b);
        tf.f$E(new ID(tf), new Gg(tf));
    }

    public static double f$e(Tf tf) {
        return tf.f$j;
    }

    @Override
    public void f$B() {
        Tf tf;
        Tf tf2 = tf;
        super.f$B();
        tf.f$j = 0.0;
        tf2.f$i = 0.0;
        tf2.f$M = 0.0;
    }

    public static double f$E(Tf tf, double d) {
        tf.f$M = d;
        return tf.f$M;
    }

    public static double f$a(Tf tf) {
        return tf.f$i;
    }

    public static Bh f$E(Tf tf) {
        return tf.f$d;
    }

    public static double f$e(Tf tf, double d) {
        tf.f$j = d;
        return tf.f$j;
    }

    public static Minecraft f$a() {
        return f$d;
    }

    public static Minecraft f$K() {
        return f$d;
    }

    @Override
    public void f$K() {
        Tf tf;
        Tf tf2 = tf;
        super.f$K();
        tf.f$j = 0.0;
        tf2.f$i = 0.0;
        tf2.f$M = 0.0;
    }

    public static Minecraft f$E() {
        return f$d;
    }

    public static double f$a(Tf tf, double d) {
        tf.f$i = d;
        return tf.f$i;
    }
}
 */